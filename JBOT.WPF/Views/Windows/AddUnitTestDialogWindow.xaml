<ui:UiWindow x:Class="JBOT.WPF.Views.Windows.AddUnitTestDialogWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JBOT.WPF.Views.Windows"
        xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
        xmlns:converters="clr-namespace:JBOT.WPF.Converters"
        xmlns:enum="clr-namespace:JBOT.Domain.Entities.Enums;assembly=JBOT.Domain"
        Height="450" 
        Width="800"
        Title="{Binding ViewModel.Title, Mode=OneWay}"
        d:DataContext="{d:DesignInstance local:AddUnitTestDialogWindow,
                                     IsDesignTimeCreatable=True}"
        Background="{DynamicResource ApplicationBackgroundBrush}"
        ExtendsContentIntoTitleBar="True"
        WindowBackdropType="Mica"
        WindowCornerPreference="Round"
        WindowStartupLocation="CenterScreen" 
        WindowStyle="ToolWindow"
        mc:Ignorable="d" Closing="OnClosing">
    <ui:UiWindow.Resources>
        <converters:EnumToModelOperatorConverter x:Key="EnumToModelOperatorConverter"/>
        <Style x:Key="AssertTextBoxActualStyle"
               BasedOn="{StaticResource {x:Type ui:TextBox}}"
               TargetType="ui:TextBox">
            <Setter Property="TextAlignment" Value="Right"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="IconFilled" Value="True"/>
            <Setter Property="ClearButtonEnabled" Value="False"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSuccess}" Value="False">
                    <Setter Property="Icon" Value="DismissCircle48"/>
                    <Setter Property="IconForeground" Value="Crimson"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSuccess}" Value="True">
                    <Setter Property="Icon" Value="CheckmarkCircle48"/>
                    <Setter Property="IconForeground" Value="LimeGreen"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="StatusInfoBarStyle"
               BasedOn="{StaticResource {x:Type ui:InfoBar}}"
               TargetType="ui:InfoBar">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=ViewModel.TestableObjectDetails.Status}" Value="{x:Static enum:StatusEnums.Success}">
                    <Setter Property="Severity" Value="Success"/>
                    <Setter Property="IsOpen" Value="True"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=ViewModel.TestableObjectDetails.Status}" Value="{x:Static enum:StatusEnums.Failed}">
                    <Setter Property="Severity" Value="Error"/>
                    <Setter Property="IsOpen" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </ui:UiWindow.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="285*"/>
            <ColumnDefinition Width="46*"/>
            <ColumnDefinition Width="69*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <ui:TitleBar
            Title="{Binding ViewModel.Title, Mode=OneWay}"
            UseSnapLayout="True" Grid.ColumnSpan="3" VerticalAlignment="Center">
            <ui:TitleBar.Tray>
                <ui:NotifyIcon
                    FocusOnLeftClick="True"
                    MenuOnRightClick="True"
                    TooltipText="{Binding ViewModel.Title, Mode=OneWay}">
                    <ui:NotifyIcon.Menu>
                        <ContextMenu>
                            <MenuItem Header="Add Unit Test" Tag="add unit test" />
                        </ContextMenu>
                    </ui:NotifyIcon.Menu>
                </ui:NotifyIcon>
            </ui:TitleBar.Tray>
        </ui:TitleBar>
        <Grid Grid.Row="1" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Grid.RowSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal" CanHorizontallyScroll="True" HorizontalAlignment="Stretch">
                    <ui:AutoSuggestBox 
                        x:Name="txtSearchByName"
                        VerticalAlignment="Top"
                        ItemsSource="{Binding ViewModel.SearchByObjectNameOptions}"
                        Margin="0,0,10,10"
                        PlaceholderText="Search Testable Object By Name..." 
                        MinWidth="200"
                        Width="400"
                        Text="{Binding ViewModel.SearchByName}"
                        MaxWidth="500"/>

                    <ComboBox 
                        HorizontalAlignment="Right"
                        Margin="0,0,10,10"
                        ItemsSource="{Binding ViewModel.SearchByTypeOptions, Mode=OneWay}"
                        SelectedItem="{Binding ViewModel.SearchByType, Mode=TwoWay}"
                        VerticalAlignment="Top"
                        MinWidth="200"/>
                </StackPanel>
                

                <ui:DataGrid
                Grid.Row="1"
                x:Name="dataGrid"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                ItemsSource="{Binding ViewModel.TestableObjects}" 
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                CanUserDeleteRows="False"
                CanUserReorderColumns="False"
                FrozenColumnCount="1"
                SelectionUnit="FullRow">
                    <ui:DataGrid.Resources>
                        <DataTemplate x:Key="SelectedRowCommand">
                            <ui:Button 
                        BorderThickness="1" 
                        Command="{Binding Path = DataContext.ViewModel.SetSelectedTestableObjectCommand,
                                            RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ui:DataGrid}}}"
                        CommandParameter="{Binding ObjectId}"
                        Appearance="Success"
                        Content="Test"/>
                        </DataTemplate>
                    </ui:DataGrid.Resources>
                    <ui:DataGrid.Columns>
                        <DataGridTemplateColumn x:Name="Select1" CellTemplate="{StaticResource SelectedRowCommand}" Header="Select"/>
                        <DataGridTextColumn Binding="{Binding Name}" Header="Object Name" Width="Auto" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Type}" Header="Type" Width="Auto" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Parameters}" Header="Parameters" Width="Auto" MaxWidth="300" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding ReturnType}" Header="ReturnType" Width="Auto" IsReadOnly="True"/>
                    </ui:DataGrid.Columns>
                </ui:DataGrid>
            </Grid>
            

            <ScrollViewer Grid.Row="0" Grid.Column="1" Margin="10,0">
                <StackPanel Height="Auto" VerticalAlignment="Stretch">
                    <ui:TextBox Margin="0,0,0,10" Icon="CodeText20" ToolTip="{Binding ViewModel.CurrentObjectTitle, Mode=OneWay}" PlaceholderText="Testable Object Name" IsEnabled="False" Text="{Binding ViewModel.CurrentObjectTitle, Mode=OneWay}" />
                    <TextBlock
                    Margin="0,0,0,5"
                    Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                    Text="Test Name" />

                    <ui:Card Padding="5"  Margin="0,0,0,10" VerticalContentAlignment="Center">
                        <ui:TextBox PlaceholderText="The name of the test." Text="{Binding ViewModel.TestName, Mode=TwoWay}" />
                    </ui:Card>

                    <TextBlock
                    Margin="0,0,0,5"
                    Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                    Text="Description" />
                    <ui:Card Padding="5"  Margin="0,0,0,10" VerticalContentAlignment="Center">
                        <ui:TextBox MinLines="3" MinHeight="100" PlaceholderText="Tell me about this test." Text="{Binding ViewModel.TestDescription, Mode=TwoWay}" />
                    </ui:Card>

                    <TextBlock
                    Margin="0,0,0,5"
                    Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                    Text="Arrange" />

                    <ui:Card Padding="5"  Margin="0,0,0,10">
                        <ItemsControl ItemsSource="{Binding ViewModel.TestableObjectDetails.InputParameters}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Height="Auto">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="100"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition MinHeight="40"/>
                                        </Grid.RowDefinitions>
                                        <Label Grid.Column="0" Content="{Binding Path=Name}" Width="100" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                        <ui:TextBox Grid.Column="1" Text="{Binding Value}" TextAlignment="Right" HorizontalAlignment="Stretch" PlaceholderText="{Binding Path=DataTypeDisplay}" VerticalContentAlignment="Center" VerticalAlignment="Center" BorderThickness="0"/>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ui:Card>

                    <TextBlock
                    Margin="0,0,0,5"
                    Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                    Text="Assert" />
                    <ui:Card Padding="5"  Margin="0,0,0,10">
                        <ItemsControl ItemsSource="{Binding ViewModel.TestableObjectDetails.OutputParameters}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Height="Auto">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition MinHeight="40"/>
                                        </Grid.RowDefinitions>

                                        <Label Grid.Column="0" Content="{Binding Path=Name}" Width="100" VerticalAlignment="Center" FontWeight="SemiBold"/>

                                        <ui:TextBox Grid.Column="1" Margin="2,0" Text="{Binding Expected}" TextAlignment="Right" HorizontalAlignment="Stretch" PlaceholderText="Expected" VerticalContentAlignment="Center" VerticalAlignment="Center" BorderThickness="0"/>
                                        <ComboBox Grid.Column="2" 
                                              Margin="2,0" 
                                              HorizontalAlignment="Stretch" 
                                              ItemsSource="{Binding Path = DataContext.ViewModel.Operators,
                                                            RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ItemsControl}}}" 
                                              DisplayMemberPath="Name" 
                                              SelectedValuePath="Id"
                                              SelectedValue="{Binding Operator, Converter={StaticResource EnumToModelOperatorConverter}}"/>

                                        <ui:TextBox Grid.Column="3" Margin="2,0" 
                                                Text="{Binding Actual}" 
                                                PlaceholderText="Actual" 
                                                Style="{StaticResource AssertTextBoxActualStyle}"
                                                />

                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ui:Card>

                    <Grid HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ui:Button Grid.Column="0" Command="{Binding ViewModel.QuickRunCommand}"  Icon="Flash28" Width="125" HorizontalContentAlignment="Left" Content="Quick Test" Appearance="Caution" />
                        <ui:Button Grid.Column="1" Command="{Binding ViewModel.AddCommand}" Icon="Beaker32" Width="125" HorizontalContentAlignment="Center" Content="Add" Appearance="Success" />
                        <ui:Button Grid.Column="2" Command="{Binding ViewModel.ClearCommand}" Icon="EraserTool24" Width="125" HorizontalContentAlignment="Center" Content="Clear" Appearance="Danger" />
                        <ui:Button Grid.Column="3" Command="{Binding ViewModel.CloseCommand}" Icon="CalendarCancel24" Width="125" HorizontalContentAlignment="Center" Content="Cancel" Appearance="Secondary" />
                    </Grid>
                </StackPanel>
            </ScrollViewer>
            
            <ui:InfoBar 
                    Margin="0,0,0,10"
                    VerticalAlignment="Bottom"
                    Grid.Column="1"
                    Grid.Row="1"
                    Title="{Binding ViewModel.TestableObjectDetails.ErrorTitle}"
                    Message="{Binding ViewModel.TestableObjectDetails.ErrorMessage}"
                    Style="{StaticResource StatusInfoBarStyle}"/>
        </Grid>

    </Grid>

</ui:UiWindow>
